CREATE DATABASE stock_selector_db

CREATE TABLE indices ( 
    id INTEGER PRIMARY KEY AUTOINCREMENT, 
    name VARCHAR(100) NOT NULL 
);

CREATE TABLE companies (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
	name VARCHAR (100) NOT NULL,
	"total market value" FLOAT,
    shares outstanding INTEGER,
    last_update DATE NOT NULL	
);

CREATE TABLE shares (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
	ticker VARCHAR(20) NOT NULL,
	PE FLOAT,
	EPS FLOAT,
	"book value" FLOAT,
	exchange VARCHAR(50),
	price FLOAT,
	"date" DATE NOT NULL,
	companies_id INTEGER,
	FOREIGN KEY (companies_id) REFERENCES companies(id)
 );

CREATE TABLE incomes (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
	net income INTEGER,
	"date" DATE NOT NULL,
	companies_id INTEGER,
	FOREIGN KEY (companies_id) REFERENCES companies(id)
);

CREATE TABLE dividends (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
	"trailing rate" FLOAT,
	"forward rate" FLOAT,
	"trailing yield" FLOAT,
    "forward yield" FLOAT,
    "date" DATE NOT NULL,
    companies_id INTEGER,
    FOREIGN KEY (companies_id) REFERENCES companies(id)	
);

CREATE TABLE debt (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
	"total debt" INTEGER,
	"debt/equity ratio" FLOAT,
	"current ratio" FLOAT,
	"date" DATE NOT NULL,
	companies_id INTEGER,
	FOREIGN KEY (companies_id) REFERENCES companies(id)
);

CREATE TABLE balance_sheets (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
	"current assets" INTEGER,
	tangible assets INTEGER,
	"total assets" INTEGER,
	"current liabilities" INTEGER,
	"total liabilities" INTEGER,
	"total equity" INTEGER,
	"date" DATE NOT NULL,
	companies_id INTEGER,
	FOREIGN KEY (companies_id) REFERENCES companies(id)
);

CREATE TABLE indices_companies (
    indices_id INTEGER,
	companies_id INTEGER,
	PRIMARY KEY (indices_id, companies_id),
	FOREIGN KEY (indices_id) REFERENCES indices(id),
	FOREIGN KEY (companies_id) REFERENCES companies(id)
);
